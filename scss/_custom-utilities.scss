// stylelint-disable indentation

// Utilities

$utilities: () !default;
// stylelint-disable-next-line scss/dollar-variable-default
$utilities: map-merge(
  (
    // scss-docs-start utils-vertical-align
    "align": (
      property: vertical-align,
      class: u-va,
      values: (
        bl: baseline,
        t: top,
        m: middle,
        b: bottom,
        tb: text-bottom,
        tt: text-top,
      )
    ),
    // scss-docs-end utils-vertical-align
    // scss-docs-start utils-float
    "float": (
      responsive: true,
      property: float,
      class: u-fl,
      values: (
        l: left,
        r: right,
        n: none,
      )
    ),
    // scss-docs-end utils-float
    // scss-docs-start utils-overflow
    "overflow": (
      property: overflow,
      class: u-ov,
      values: (
        a: auto,
        h: hidden,
        v: visible,
        s: scroll,
      )
    ),
    // scss-docs-end utils-overflow
    // scss-docs-start utils-display
    "display": (
      responsive: true,
      print: true,
      property: display,
      class: u-d,
      values: (
        i: inline,
        ib: inline-block,
        b: block,
        g: grid,
        tb: table,
        tbr: table-row,
        tbc: table-cell,
        f: flex,
        "if": inline-flex,
        n: none,
      )
    ),
    // scss-docs-end utils-display
    // scss-docs-start utils-shadow
    "shadow": (
      property: box-shadow,
      class: u-bxsh,
      values: (
        null: $box-shadow,
        sm: $box-shadow-sm,
        lg: $box-shadow-lg,
        none: none,
      )
    ),
    // scss-docs-end utils-shadow
    // scss-docs-start utils-position
    "position": (
      responsive: true,
      property: position,
      class: u-pos,
      values: (
        s: static,
        r: relative,
        a: absolute,
        f: fixed,
        st: sticky,
      )
    ),
    "top": (
      property: top,
      class: u-t,
      values: $position-values
    ),
    "bottom": (
      property: bottom,
      class: u-b,
      values: $position-values
    ),
    "start": (
      property: left,
      class: u-l,
      values: $position-values
    ),
    "end": (
      property: right,
      class: u-r,
      values: $position-values
    ),
    "translate-middle": (
      property: transform,
      class: u-translate-middle,
      values: (
        null: translate(-50%, -50%),
        x: translateX(-50%),
        y: translateY(-50%),
      )
    ),
    // scss-docs-end utils-position
    // scss-docs-start utils-borders
    "border": (
      property: border,
      class: u-bd,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-top": (
      property: border-top,
      class: u-bd-t,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-end": (
      property: border-right,
      class: u-bd-r,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-bottom": (
      property: border-bottom,
      class: u-bd-b,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-start": (
      property: border-left,
      class: u-bd-l,
      values: (
        null: $border-width solid $border-color,
        0: 0,
      )
    ),
    "border-color": (
      property: border-color,
      class: u-bdc,
      values: map-merge($theme-colors, ("white": $white))
    ),
    "border-width": (
      property: border-width,
      class: u-bdw,
      values: $border-widths
    ),
    // scss-docs-end utils-borders
    // Sizing utilities
    // scss-docs-start utils-sizing
    "width": (
      property: width,
      class: u-w,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-width": (
      property: max-width,
      class: u-maw,
      values: (100: 100%)
    ),
    "viewport-width": (
      property: width,
      class: u-vw,
      values: (100: 100vw)
    ),
    "min-viewport-width": (
      property: min-width,
      class: u-min-vw,
      values: (100: 100vw)
    ),
    "height": (
      responsive: true,
      property: height,
      class: u-h,
      values: (
        25: 25%,
        50: 50%,
        75: 75%,
        100: 100%,
        auto: auto
      )
    ),
    "max-height": (
      property: max-height,
      class: u-mih,
      values: (100: 100%)
    ),
    "viewport-height": (
      property: height,
      class: u-vh,
      values: (100: 100vh)
    ),
    "min-viewport-height": (
      property: min-height,
      class: u-min-vh,
      values: (100: 100vh)
    ),
    // scss-docs-end utils-sizing
    // Flex utilities
    // scss-docs-start utils-flex
    "flex": (
      responsive: true,
      property: flex,
      class: u-fx,
      values: (fill: 1 1 auto)
    ),
    "flex-direction": (
      responsive: true,
      property: flex-direction,
      class: u-fxd,
      values: (
        r: row,
        c: column,
        rr: row-reverse,
        cr: column-reverse,
      )
    ),
    "flex-grow": (
      responsive: true,
      property: flex-grow,
      class: u-fxg,
      values: (
        0: 0,
        1: 1,
      )
    ),
    "flex-shrink": (
      responsive: true,
      property: flex-shrink,
      class: u-fxsh,
      values: (
        0: 0,
        1: 1,
      )
    ),
    "flex-wrap": (
      responsive: true,
      property: flex-wrap,
      class: u-fxw,
      values: (
        w: wrap,
        n: nowrap,
        wr: wrap-reverse
      )
    ),
    "gap": (
      rfs: true,
      responsive: true,
      property: gap,
      class: u-gap,
      values: $spacers
    ),
    "justify-content": (
      responsive: true,
      property: justify-content,
      class: u-jc,
      values: (
        fs: flex-start,
        fe: flex-end,
        c: center,
        sb: space-between,
        sa: space-around,
        se: space-evenly,
      )
    ),
    "align-items": (
      responsive: true,
      property: align-items,
      class: u-ai,
      values: (
        fs: flex-start,
        fe: flex-end,
        c: center,
        b: baseline,
        s: stretch,
      )
    ),
    "align-content": (
      responsive: true,
      property: align-content,
      class: u-ac,
      values: (
        fs: flex-start,
        fe: flex-end,
        c: center,
        sb: space-between,
        sa: space-around,
        s: stretch,
      )
    ),
    "align-self": (
      responsive: true,
      property: align-self,
      class: u-as,
      values: (
        a: auto,
        fs: flex-start,
        fe: flex-end,
        c: center,
        b: baseline,
        s: stretch,
      )
    ),
    "order": (
      responsive: true,
      property: order,
      class: u-order,
      values: (
        first: -1,
        0: 0,
        1: 1,
        2: 2,
        3: 3,
        4: 4,
        5: 5,
        last: 6,
      ),
    ),
    // scss-docs-end utils-flex
    // Margin utilities
    // scss-docs-start utils-spacing
    "margin": (
      rfs: true,
      responsive: true,
      property: margin,
      class: u-m,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-x": (
      rfs: true,
      responsive: true,
      property: margin-right margin-left,
      class: u-mx,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-y": (
      rfs: true,
      responsive: true,
      property: margin-top margin-bottom,
      class: u-my,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-top": (
      rfs: true,
      responsive: true,
      property: margin-top,
      class: u-mt,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-end": (
      rfs: true,
      responsive: true,
      property: margin-right,
      class: u-mr,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-bottom": (
      rfs: true,
      responsive: true,
      property: margin-bottom,
      class: u-mb,
      values: map-merge($spacers, (auto: auto))
    ),
    "margin-start": (
      rfs: true,
      responsive: true,
      property: margin-left,
      class: u-ml,
      values: map-merge($spacers, (auto: auto))
    ),
    // Negative margin utilities
    "negative-margin": (
      responsive: true,
      property: margin,
      class: u-m,
      values: $negative-spacers
    ),
    "negative-margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: u-mx,
      values: $negative-spacers
    ),
    "negative-margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: u-my,
      values: $negative-spacers
    ),
    "negative-margin-top": (
      responsive: true,
      property: margin-top,
      class: u-mt,
      values: $negative-spacers
    ),
    "negative-margin-end": (
      responsive: true,
      property: margin-right,
      class: u-mr,
      values: $negative-spacers
    ),
    "negative-margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: u-mb,
      values: $negative-spacers
    ),
    "negative-margin-start": (
      responsive: true,
      property: margin-left,
      class: u-ml,
      values: $negative-spacers
    ),
    // Padding utilities
    "padding": (
      rfs: true,
      responsive: true,
      property: padding,
      class: u-p,
      values: $spacers
    ),
    "padding-x": (
      rfs: true,
      responsive: true,
      property: padding-right padding-left,
      class: u-px,
      values: $spacers
    ),
    "padding-y": (
      rfs: true,
      responsive: true,
      property: padding-top padding-bottom,
      class: u-py,
      values: $spacers
    ),
    "padding-top": (
      rfs: true,
      responsive: true,
      property: padding-top,
      class: u-pt,
      values: $spacers
    ),
    "padding-end": (
      rfs: true,
      responsive: true,
      property: padding-right,
      class: u-pr,
      values: $spacers
    ),
    "padding-bottom": (
      rfs: true,
      responsive: true,
      property: padding-bottom,
      class: u-pb,
      values: $spacers
    ),
    "padding-start": (
      rfs: true,
      responsive: true,
      property: padding-left,
      class: u-pl,
      values: $spacers
    ),
    // scss-docs-end utils-spacing
    // Text
    // scss-docs-start utils-text
    "font-family": (
      property: font-family,
      class: u-ff,
      values: (
        monospace: var(--#{$variable-prefix}font-monospace),
        noto: $noto,
        noto-serif: $notoSerif,
        yumin: $yumin,
        yugo: $yugo,
      )
    ),
    "font-size": (
      rfs: true,
      property: font-size,
      class: u-fz,
      values: $font-sizes
    ),
    "font-style": (
      property: font-style,
      class: u-fs,
      values: italic normal
    ),
    "font-weight": (
      property: font-weight,
      class: u-fw,
      values: (
        l: $font-weight-light,
        lr: $font-weight-lighter,
        n: $font-weight-normal,
        b: $font-weight-bold,
        br: $font-weight-bolder,
        black: 900,
      )
    ),
    "line-height": (
      responsive: true,
      property: line-height,
      class: u-lh,
      values: (
        1: 1,
        sm: $line-height-sm,
        base: $line-height-base,
        md: 1.75,
        lg: $line-height-lg,
      )
    ),
    "text-align": (
      responsive: true,
      property: text-align,
      class: u-ta,
      values: (
        l: left,
        r: right,
        c: center,
      )
    ),
    "text-decoration": (
      property: text-decoration,
      class: u-td,
      values: (
        n: none,
        u: underline,
        l: line-through
      )
    ),
    "text-transform": (
      property: text-transform,
      class: u-tt,
      values: (
        l: lowercase,
        u: uppercase,
        c: capitalize
      )
    ),
    "white-space": (
      property: white-space,
      class: u-whs,
      values: (
        n: normal,
        nw: nowrap,
      )
    ),
    "word-wrap": (
      property: word-wrap word-break,
      class: u-wow,
      values: (b: break-word),
      rtl: false
    ),
    // scss-docs-end utils-text
    // scss-docs-start utils-color
    "color": (
      property: color,
      class: u-c,
      values: map-merge(
        $theme-colors,
        (
          "white": $white,
          "body": $body-color,
          "muted": $text-muted,
          "black-50": rgba($black, .5),
          "white-50": rgba($white, .5),
          "reset": inherit,
        )
      )
    ),
    // scss-docs-end utils-color
    // scss-docs-start utils-bg-color
    "background-color": (
      responsive: true,
      property: background-color,
      class: u-bgc,
      values: map-merge(
        $theme-colors,
        (
          "body": $body-bg,
          "white": $white,
          "transparent": transparent
        )
      )
    ),
    // scss-docs-end utils-bg-color
    "gradient": (
      property: background-image,
      class: u-bg,
      values: (gradient: var(--#{$variable-prefix}gradient))
    ),
    // scss-docs-start utils-interaction
    "user-select": (
      property: user-select,
      class: u-us,
      values: (
        all: all,
        a: auto,
        n: none
      )
    ),
    "pointer-events": (
      property: pointer-events,
      class: u-pe,
      values: (
        n: none,
        a: auto,
      )
    ),
    // scss-docs-end utils-interaction
    // scss-docs-start utils-border-radius
    "rounded": (
      property: border-radius,
      class: u-bdrs,
      values: (
        null: $border-radius,
        0: 0,
        1: $border-radius-sm,
        2: $border-radius,
        3: $border-radius-lg,
        circle: 50%,
        pill: $border-radius-pill
      )
    ),
    "rounded-top": (
      property: border-top-left-radius border-top-right-radius,
      class: u-bdrs-top,
      values: (null: $border-radius)
    ),
    "rounded-end": (
      property: border-top-right-radius border-bottom-right-radius,
      class: u-bdrs-right,
      values: (null: $border-radius)
    ),
    "rounded-bottom": (
      property: border-bottom-right-radius border-bottom-left-radius,
      class: u-bdrs-bottom,
      values: (null: $border-radius)
    ),
    "rounded-start": (
      property: border-bottom-left-radius border-top-left-radius,
      class: u-bdrs-left,
      values: (null: $border-radius)
    ),
    // scss-docs-end utils-border-radius
    // scss-docs-start utils-visibility
    "visibility": (
      property: visibility,
      class: u-null,
      values: (
        visible: visible,
        invisible: hidden,
      )
    )
    // scss-docs-end utils-visibility
  ),
  $utilities
);
